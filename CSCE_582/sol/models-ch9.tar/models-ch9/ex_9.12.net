net
{
    node_size = (80 40);
    HR_Desc = "";
    HR_OOBN_CheckConsistency = "1";
    HR_OOBN_FitExpand = "1";
    HR_Zoom_ZoomFactor = "100";
    HR_Groups_GroupColors = "";
    HR_Groups_GroupNames = "";
    HR_Groups_UserGroupsNo = "0";
    HR_Color_Interface = "-1";
    HR_Color_Instance = "-1";
    HR_Color_Utility = "-1";
    HR_Color_Decision = "-1";
    HR_Color_ContinuousChance = "-1";
    HR_Color_DiscreteChance = "-1";
    HR_Monitor_InitSD = "2";
    HR_Monitor_InitStates = "5";
    HR_Monitor_OpenGraph = "0";
    HR_Monitor_GraphPrecision = "100";
    HR_Monitor_AutoUpdGraph = "0";
    HR_Compile_MaxMinimalSeparators = "100000";
    HR_Compile_ApproxEpsilon = "1.0E-5";
    HR_Compile_Approximate = "0";
    HR_Compile_Compress = "0";
    HR_Compile_TriangMethod = "0";
    HR_Propagate_AutoNormal = "1";
    HR_Propagate_AutoSum = "1";
    HR_Propagate_Auto = "1";
    HR_Font_Italic = "0";
    HR_Font_Weight = "400";
    HR_Font_Size = "-12";
    HR_Font_Name = "Arial";
    HR_Grid_GridShow = "0";
    HR_Grid_GridSnap = "0";
    HR_Grid_Y = "40";
    HR_Grid_X = "40";
}

utility U3
{
    label = "C2";
    position = (414 63);
    HR_Group = "0";
    HR_Desc = "";
}

node C3
{
    label = "Second test";
    position = (588 152);
    states = ("zero" "one" "no-result");
    HR_LinkMode_D1 = "0";
    HR_State_2 = "";
    HR_Group = "0";
    HR_Desc = "";
    HR_State_1 = "";
    HR_State_0 = "";
}

node C2
{
    label = "First results";
    position = (413 280);
    states = ("zero" "one" "two");
    HR_LinkMode_D3 = "0";
    HR_LinkMode_C3 = "0";
    HR_State_2 = "";
    HR_Group = "0";
    HR_Desc = "";
    HR_State_1 = "";
    HR_State_0 = "";
}

decision D3
{
    label = "Second test?\n";
    position = (415 150);
    states = ("continue" "stop");
    HR_LinkMode_U3 = "0";
    HR_LinkMode_C3 = "0";
    HR_Group = "0";
    HR_Desc = "";
    HR_State_1 = "";
    HR_State_0 = "";
}

utility U2
{
    label = "C1";
    position = (210 179);
    HR_Group = "0";
    HR_Desc = "";
}

decision D2
{
    label = "First test?";
    position = (210 281);
    states = ("t1" "t2" "t3" "no-test");
    HR_LinkMode_C3 = "0";
    HR_LinkMode_C2 = "0";
    HR_LinkMode_U2 = "0";
    HR_Group = "0";
    HR_Desc = "";
    HR_State_3 = "";
    HR_State_2 = "";
    HR_State_1 = "";
    HR_State_0 = "";
}

utility U1
{
    label = "U";
    position = (729 280);
    HR_Group = "0";
    HR_Desc = "";
}

decision D1
{
    label = "Buy?";
    position = (730 156);
    states = ("yes" "no" "guarantee");
    HR_State_2 = "";
    HR_LinkMode_U1 = "0";
    HR_Group = "0";
    HR_Desc = "";
    HR_State_1 = "";
    HR_State_0 = "";
}

node C1
{
    label = "Car";
    position = (589 280);
    states = ("peach" "lemon");
    HR_LinkMode_C3 = "0";
    HR_LinkMode_C2 = "0";
    HR_State_2 = "";
    HR_LinkMode_U1 = "0";
    HR_Group = "0";
    HR_Desc = "";
    HR_State_1 = "";
    HR_State_0 = "";
}

potential (U3 | D3)
{
    data
     = ( -4	%  D3=continue
	 0 );	%  D3=stop
}

potential (C3 | D2 C2 D3 C1)
{
    data
     = ((((( 0 0 1 )	%  D2=t1  C2=zero  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=t1  C2=zero  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t1  C2=zero  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=t1  C2=zero  D3=stop  C1=lemon
	 ((( 0 0 1 )	%  D2=t1  C2=one  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=t1  C2=one  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t1  C2=one  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=t1  C2=one  D3=stop  C1=lemon
	 ((( 0 0 1 )	%  D2=t1  C2=two  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=t1  C2=two  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t1  C2=two  D3=stop  C1=peach
	   ( 0 0 1 ))))	%  D2=t1  C2=two  D3=stop  C1=lemon
	(((( 0 0 1 )	%  D2=t2  C2=zero  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=t2  C2=zero  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t2  C2=zero  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=t2  C2=zero  D3=stop  C1=lemon
	 ((( 0 0 1 )	%  D2=t2  C2=one  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=t2  C2=one  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t2  C2=one  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=t2  C2=one  D3=stop  C1=lemon
	 ((( 0 0 1 )	%  D2=t2  C2=two  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=t2  C2=two  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t2  C2=two  D3=stop  C1=peach
	   ( 0 0 1 ))))	%  D2=t2  C2=two  D3=stop  C1=lemon
	(((( 0.89 0.11 0 )	%  D2=t3  C2=zero  D3=continue  C1=peach
	   ( 0.33 0.67 0 ))	%  D2=t3  C2=zero  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t3  C2=zero  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=t3  C2=zero  D3=stop  C1=lemon
	 ((( 1 0 0 )	%  D2=t3  C2=one  D3=continue  C1=peach
	   ( 0.56 0.44 0 ))	%  D2=t3  C2=one  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t3  C2=one  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=t3  C2=one  D3=stop  C1=lemon
	 ((( 0 0 1 )	%  D2=t3  C2=two  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=t3  C2=two  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=t3  C2=two  D3=stop  C1=peach
	   ( 0 0 1 ))))	%  D2=t3  C2=two  D3=stop  C1=lemon
	(((( 0 0 1 )	%  D2=no-test  C2=zero  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=no-test  C2=zero  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=no-test  C2=zero  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=no-test  C2=zero  D3=stop  C1=lemon
	 ((( 0 0 1 )	%  D2=no-test  C2=one  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=no-test  C2=one  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=no-test  C2=one  D3=stop  C1=peach
	   ( 0 0 1 )))	%  D2=no-test  C2=one  D3=stop  C1=lemon
	 ((( 0 0 1 )	%  D2=no-test  C2=two  D3=continue  C1=peach
	   ( 0 0 1 ))	%  D2=no-test  C2=two  D3=continue  C1=lemon
	  (( 0 0 1 )	%  D2=no-test  C2=two  D3=stop  C1=peach
	   ( 0 0 1 )))));	%  D2=no-test  C2=two  D3=stop  C1=lemon
}

potential (C2 | C1 D2)
{
    data
     = ((( 0.9 0.1 0 )	%  C1=peach  D2=t1
	 ( 0.8 0.2 0 )	%  C1=peach  D2=t2
	 ( 0.9 0.1 0 )	%  C1=peach  D2=t3
	 ( 0 0 1 ))	%  C1=peach  D2=no-test
	(( 0.4 0.6 0 )	%  C1=lemon  D2=t1
	 ( 0.1 0.4 0.5 )	%  C1=lemon  D2=t2
	 ( 0.4 0.6 0 )	%  C1=lemon  D2=t3
	 ( 0 0 1 )));	%  C1=lemon  D2=no-test
}

potential (D3 | C2) {}

potential (U2 | D2)
{
    data
     = ( -9	%  D2=t1
	 -13	%  D2=t2
	 -10	%  D2=t3
	 0 );	%  D2=no-test
}

potential (D2) {}

potential (U1 | D1 C1)
{
    data
     = (( 60	%  D1=yes  C1=peach
	  -100 )	%  D1=yes  C1=lemon
	( 0	%  D1=no  C1=peach
	  0 )	%  D1=no  C1=lemon
	( 20	%  D1=guarantee  C1=peach
	  40 ));	%  D1=guarantee  C1=lemon
}

potential (D1 | C3) {}

potential (C1)
{
    data = ( 0.8 0.2 );
}
